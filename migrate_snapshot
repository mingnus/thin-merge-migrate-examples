#!/bin/bash

source ./dm-utils.sh
source ./dm-thin-utils.sh
source ./lvm-utils.sh
source ./lvmthin-utils.sh

prepare_dest_lv() {
    local vg_name="$1"
    local dest_pool_lv="$2"
    local dest_thin_lv="$3"
    local src_size="$4"

    local dest_type
    if dest_type=$(lvm_get_target_type "${vg_name}" "${dest_thin_lv}"); then
        if [ "${dest_type}" != "thin" ]; then
            return 1
        fi
        if [ $(lvm_get_lv_size "${vg_name}" "${dest_thin_lv}") != ${src_size} ]; then
            return 1
        fi
    elif ! lvmthin_create_thin "${vg_name}" "${dest_pool_lv}" "${dest_thin_lv}" "${src_size}"; then
        return 1
    fi
}

thinpool_migrate_thin() {
    local src_dev="$1"
    local dest_dev="$2"

    local src_pool_name
    if ! src_pool_name=$(thin_get_pool_name "${src_dev}"); then
	return 1
    fi

    local src_path="/dev/mapper/${src_dev}"
    local dest_path="/dev/mapper/${dest_dev}"
    dmsetup message "${src_pool_name}" 0 reserve_metadata_snap &&
	thin_migrate --source-dev "${src_path}" --dest-dev "${dest_path}"
    ret=$?
    # release metadata snapshot anyway
    dmsetup message "${src_pool_name}" 0 release_metadata_snap

    return ${ret}
}

migrate_thin_device() {
    local src_dev="$1"
    local vg_name="$2"
    local dest_pool_lv="$3"
    local dest_thin_lv="$4"

    local src_path="/dev/mapper/${src_dev}"
    local src_size
    if ! src_size=$(blockdev_getsz "${src_path}"); then
        return 1
    fi

    # make sure the destination lv is a thin volume with identical size. otherwise, create a new one
    if ! prepare_dest_lv "${vg_name}" "${dest_pool_lv}" "${dest_thin_lv}" "${src_size}"; then
	return 1
    fi

    local dest_dev="${vg_name}-${dest_thin_lv}"
    thinpool_migrate_thin "${src_dev}" "${dest_dev}"
    local ret=$?

    if [ ${ret} -ne 0 ]; then
        lvm_remove_lv "${vg_name}" "${dest_thin_lv}"
    fi

    lvm_deactivate_lv "${vg_name}" "${dest_thin_lv}"
    return ${ret}
}

CMD=$(basename "$(readlink -f "$0")")
OPTIONS=$(getopt --name "${CMD}" --options="h" --long "dest-pool:" --long "dest-lv:" --long "help" -- "$@") || exit 1
eval set -- ${OPTIONS}

dest_pool_lv=""
dest_thin_lv=""
while true; do
    case "$1" in
    -h | --help)
        echo "${CMD} <SNAP_DEV> --dest-pool <VG>/<POOL_LV> --dest-lv <NAME_FOR_NEW_LV>"
        exit 0
        ;;
    --dest-pool)
        dest_pool_lv="$2"
        shift
        ;;
    --dest-lv)
        dest_thin_lv="$2"
        shift
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

if [ -z ${dest_pool_lv} ] || [ -z ${dest_thin_lv} ] || [ $# -ne 1 ]; then
    echo "One or more required arguments were not provided" >&2
    exit 1
fi

names=()
if ! names=($(lvm_parse_display_name ${dest_pool_lv})); then
    echo "Logical volume ${dest_pool_lv} not found" >&2
    exit 1
fi

src_dev="$1"
migrate_thin_device "${src_dev}" "${names[0]}" "${names[1]}" "${dest_thin_lv}"
